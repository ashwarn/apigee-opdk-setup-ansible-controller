---
# tasks file for apigee-opdk-setup-ansible
- name: Clean all folders
  tags: ['clean']
  file:
    path: "{{ item }}"
    state: absent
  with_items:
  - "{{ target_ansible_workspace }}"
  - "{{ ansible_config }}"

- name: Recreate folders
  file:
    path: '{{ item }}'
    state: directory
  with_items: "{{ setup_dirs }}"

- name: Setting up Ansible in this directory
  file:
    path: "{{ item }}"
    state: directory
  with_items:
  - "{{ setup_dirs }}"
  - "{{ inventory_folder }}"

- name: Update Library
  synchronize:
    src: library
    dest: "{{ library_dir }}"

- name: Update pip.conf
  tags: ['pip']
  template:
    src: "{{ item.file_name }}.j2"
    dest: "{{ item.dest_path }}/{{ item.file_name }}"
  with_items: "{{ pip_conf }}"
  when: pip_index_url is defined

- name: Check for remote user name
  tags: ['config']
  assert:
    that:
      - remote_user is defined
    msg: "Please provide the remote user name: -e remote_user=<remote username>"

- name: create ansible.cfg file from template
  tags: ['config']
  template:
    src: ansible.cfg.j2
    dest: ansible.cfg
    backup: yes
    force: yes

- name: Create starter template folders
  file:
    path: "{{ item.dest_path }}"
    state: directory
  with_items: "{{ starter_templates }}"

- name: Copy Starter Template Files
  copy:
    src: "{{ item.file_name }}"
    dest: "{{ item.dest_path }}/{{ item.file_name }}"
  with_items: "{{ starter_templates }}"

- name: Determine that state of inventory folder
  stat:
    path: "{{ inventory_folder }}"
  register: inventory_state

- name: Assert that inventory folder exists
  assert:
    that:
    - inventory_state.stat.exists
    msg: "Please create an inventory folder and place your inventory definitions there"
