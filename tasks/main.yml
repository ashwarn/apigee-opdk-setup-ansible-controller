---
# tasks file for apigee-opdk-setup-ansible
- name: Install system packages - yum
  become: yes
  tags: ['os']
  yum:
    name: "{{ item }}"
    state: present
  with_items: "{{ os_packages }}"
  when: ansible_os_family == 'Redhat'

- name: Install system packages - apt
  become: yes
  tags: ['os']
  apt:
    name: "{{ item }}"
    state: present
  with_items: "{{ os_packages }}"
  when: ansible_os_family == 'Debian'

- name: Clean all folders
  tags: ['clean']
  file:
    path: "{{ item }}"
    state: absent
  with_items:
  - "{{ target_ansible_workspace }}"
  - "{{ ansible_config }}"

- name: Recreate folders
  file:
    path: '{{ item }}'
    state: directory
  with_items: "{{ setup_dirs }}"

- name: Setting up Ansible in this directory
  file:
    path: "{{ item }}"
    state: directory
  with_items:
  - "{{ setup_dirs }}"

- name: Update Library
  synchronize:
    src: library
    dest: "{{ target_ansible_workspace }}/"

- name: Update pip.conf
  tags: ['pip']
  template:
    src: "{{ item.file_name }}.j2"
    dest: "{{ item.dest_path }}/{{ item.file_name }}"
  with_items: "{{ pip_conf }}"
  when: pip_index_url is defined

- name: Check for remote user name
  tags: ['config']
  assert:
    that:
      - remote_user is defined
    msg: "Please provide the remote user name: -e remote_user=<remote username>"

- name: Update ansible.cfg file
  tags: ['config']
  template:
    src: ansible.cfg.j2
    dest: "{{ ansible_config }}"
    backup: yes
    force: yes

- name: Create starter template folders
  file:
    path: "{{ item.dest_path }}"
    state: directory
  with_items: "{{ starter_templates }}"

- name: Copy Starter Template Files
  copy:
    src: "{{ item.file_name }}"
    dest: "{{ item.dest_path }}/{{ item.file_name }}"
  with_items: "{{ starter_templates }}"

- name: Update Ansible cache
  tags: ['cache']
  cache:
    key: "{{ item.key }}"
    value: "{{ item.value }}"
  with_items:
  - { key: 'target_ansible_workspace', value: '{{ target_ansible_workspace }}' }
  - { key: 'target_apigee_workspace', value: '{{ target_apigee_workspace }}' }

- name: Git SSH checkout of configuration repositories
  tags: ['config']
  become: false
  git:
    repo: '{{ repository_secure_endpoint_ssh }}/{{ item.repo_name }}.git'
    dest: "{{ item.dir }}/{{ item.dest_name }}"
    accept_hostkey: yes
  with_items: "{{ template_repos }}"
  when: checkout_type | trim == 'ssh'

- name: Git HTTPS checkout of configuration repositories
  tags: ['config']
  become: false
  git:
    repo: '{{ repository_secure_endpoint_https }}/{{ item.repo_name }}.git'
    dest: "{{ item.dir }}/{{ item.dest_name }}"
    accept_hostkey: yes
  with_items: "{{ template_repos }}"
  when: checkout_type | trim == 'https'

- name: Copy current folder into playbooks folder
  synchronize:
    src: "{{ playbook_dir }}"
    dest: "{{ target_apigee_workspace }}/playbooks"


